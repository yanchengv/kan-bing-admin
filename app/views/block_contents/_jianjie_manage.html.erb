<div style="width: 100%">
  <%= render partial: 'block_contents/update_block_name'%>
  <div style="margin-left: 20px;margin-right: 20px;">
    <div>界面默认只显示最新的一条!</div>
    <table id="jianjie_list"></table>
    <div id="page_jianjie"></div>
  </div>
  <br>
</div>
<script type="text/javascript">
  var cols = [ 'ID', '标题', '内容详情', '内容','区块ID'];
 // var cols = [ 'ID', '标题', '内容', '区块ID'];
  var mods = [
      { name: 'id', index: 'id', align: "left", key: 'id', hidden: true},
      { name: 'title', index: 'title', align: "center", editable: true},
    //  { name: 'content', index: 'content', align: "center", editable: true,edittype: 'textarea',  editoptions: {rows: 5, style: "width:200px"}},

      { name: 'content', index: 'content', align: "center", editable: true, hidden:true, editrules: {edithidden: true}, edittype: 'textarea',  editoptions: {rows: 5, style: "width:200px"}},
      { align: "center", edittype: 'custom', editoptions: {custom_element: myelem, custom_value: myvalue}, formatter: function (rowId, cellval, colpos, rwdat, _act) {
          var value = colpos.content;
          if (value == null) {
              value = '';
          }
          return value.replace(/<[^>]+>|\s|&nbsp;/g, '');
      }
      },
      { name: 'block_id', index: 'block_id', align: "center", editable: true, hidden: true, editoptions: { defaultValue: "<%= @page_block.id%>", readonly: 'readonly'}}
  ];
    jQuery("#jianjie_list").jqGrid({
        url: '/block_contents/index_show?block_id=<%= @page_block.id%>',
        datatype: "json",
        mtype: 'GET',
        colNames: cols,
        colModel: mods,
        rownumbers: true,
        page:1,
        rowList: [10, 15, 20],
        sortname: 'id',
        viewrecords: true,
        sortorder: "desc",
        autowidth: true,
        jsonReader: {
            root: "block_contents",
            total: "totalpages",
            page: "currpage",
            records: "totalrecords",
            repeatitems: false
        },
        prmNames: {
            page: "page", // 表示请求页码的参数名称
            rows: "rows", // 表示请求行数的参数名称
            id: "id", // 表示当在编辑数据模块中发送数据时，使用的id的名称
            //   npage: null,
            totalrows: "totalrows", // 表示需从Server得到总共多少行数据的参数名称，参见jqGrid选项中的rowTotal
            editoper: "edit", // 当在edit模式中提交数据时，操作的名称
            addoper: "add", // 当在add模式中提交数据时，操作的名称
            deloper: "del" // 当在delete模式中提交数据时，操作的名称
        },
//        gridComplete: function () {
//            jQuery("#jianjie_list").jqGrid('setGridParam', {url: '/block_contents/index_show?block_id=<%#= @page_block.id%>'}).trigger("reloadGrid");
//        },
        editurl: '/block_contents/oper_action',
        closeAfterAdd: true,
        pager: jQuery('#page_jianjie'),
        multiselect: true,
        rowNum: 15,
        altclass: 'altRowsColour',
        width: '500',
        height: 'auto',
        caption: "<%= @page_block.name%>管理"
    });
    jQuery("#jianjie_list").jqGrid('navGrid', '#page_jianjie', {
                cloneToTop: true, addtext: "新增", addtitle: "新增", edittext: "编辑", edittitle: "编辑",
                deltext: "删除", deltitle: "删除",view: true, viewtext: "查看", viewtitle: "查看", search: false,
                refreshtext: "更新", refreshtitle: "更新"},

            {
                afterSubmit:  function(response,data){
                    var pageBlockId=(data["block_id"])
                    save_content_model(pageBlockId)
                },
                afterShowForm: showKindEditor,
                closeAfterEdit: true,
                width:800,
                height:600
            },//edit
            {
                afterSubmit:  function(response,data){
                    var pageBlockId=(data["block_id"])
                    save_content_model(pageBlockId)
                },
                afterShowForm: showKindEditor,
                closeAfterAdd: true,
                width:800,
                height:600
            },//add
            {
                afterComplete: function (response, data) {
                    var pageBlockId = JSON.parse(response.responseText)['block_id'];
                    save_content_model(pageBlockId);
                }
            }
             );

         function showKindEditor(){
             KindEditor.ready(function(K) {
                 window.editor = K.create('#content',{
                     resizeType:0,
                     width: 600,
                     height: 400,
                     allowFileManager: false,
                     window_onload: true,
                     simple_mode: false,
                     uploadJson: "/block_contents/editor_upload",
                     afterBlur: function () {
                         this.sync();
                     }
                 });
             });
         }
  function myelem(value, options) {
      var el = document.createElement("input");
      el.type = "text";
      el.value = value;
      return el;
  }

  function myvalue(elem, operation, value) {
      if (operation === 'get') {
          return $(elem).val();
      } else if (operation === 'set') {
          $('input', elem).val(value);
      }
  }
</script>